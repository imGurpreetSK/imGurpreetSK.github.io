<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Kotlin on GurpreetSK.com</title>
    <link>//localhost:1313/tags/kotlin/</link>
    <description>Recent content in Kotlin on GurpreetSK.com</description>
    <generator>Hugo</generator>
    <language>en-US</language>
    <lastBuildDate>Sat, 08 Jun 2019 02:23:11 +0530</lastBuildDate>
    <atom:link href="//localhost:1313/tags/kotlin/atom.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Kotlinx Serialization - Getting Started</title>
      <link>//localhost:1313/posts/kotlinx-serialization-getting-started/</link>
      <pubDate>Sat, 08 Jun 2019 02:23:11 +0530</pubDate>
      <guid>//localhost:1313/posts/kotlinx-serialization-getting-started/</guid>
      <description>&lt;br&gt;&#xA;&lt;p&gt;&lt;img&#xA;  src=&#34;//localhost:1313/assets/posts/kotlinx-serialization/banner-kotlin-mobile.webp&#34;&#xA;  alt=&#34;Header&#34;&#xA;  loading=&#34;lazy&#34;&#xA;  decoding=&#34;async&#34;&#xA;  class=&#34;full-width&#34;&#xA;/&gt;&#xA;&#xA;&lt;/p&gt;&#xA;&lt;br&gt;&#xA;&lt;p&gt;&#xA;&lt;a href=&#34;https://github.com/Kotlin/kotlinx.serialization&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Kotlin serialization&lt;/a&gt;&#xA;&#xA; is kotlin-first, compile-time, type-safe, reflection-free and completely multi-platform ready &#xA;&lt;a href=&#34;https://en.wikipedia.org/wiki/Serialization&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;serialization&lt;/a&gt;&#xA;&#xA; mechanism to convert kotlin objects into data formats like JSON or Protobuf and vice-versa.&#xA;It is comprised of a compiler plugin which is used to generate code for serializable classes and a runtime library, containing core classes and primitives for serialization &amp;amp; IO, among some other things.&lt;/p&gt;&#xA;&lt;p&gt;&lt;img&#xA;  src=&#34;//localhost:1313/assets/posts/kotlinx-serialization/kotlinx-serialization-current-structure.webp&#34;&#xA;  alt=&#34;current-library-runtime-structure&#34;&#xA;  loading=&#34;lazy&#34;&#xA;  decoding=&#34;async&#34;&#xA;  class=&#34;full-width&#34;&#xA;/&gt;&#xA;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;While JSON format is supported out of the box by the library, thereâ€™s first-class support for other formats like Protobuf &amp;amp; CBOR, with the option to extend the functionality by writing your own library to support any other format.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
